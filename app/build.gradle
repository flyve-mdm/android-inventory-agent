apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "org.flyve.loadInventory.agent"
        minSdkVersion 12
        targetSdkVersion 12
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            testCoverageEnabled true
        }
    }

    dexOptions {
        preDexLibraries true
        maxProcessCount 8
    }

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        multiDexEnabled true
    }
}

repositories {
    maven {
        url 'https://dl.bintray.com/flyve-mdm/loadInventory'
    }
}

dependencies {
    compile 'com.flyvemdm:loadInventory:1.0.2@aar'
}

import java.util.regex.Pattern

task updateVersionCode {
    doLast {
        if (project.hasProperty("vCode")) {
            def manifestFile = file("src/main/AndroidManifest.xml")
            def pattern = Pattern.compile("versionCode=\"(\\d+)\"")
            def manifestText = manifestFile.getText()
            def matcher = pattern.matcher(manifestText)
            matcher.find()

            def manifestContent = matcher.replaceAll("versionCode=\"" + vCode + "\"")
            println "Version Code: " + vCode
            manifestFile.write(manifestContent)
        } else {
            println "please run: updateVersionCode -P vCode="
        }
    }
}

task updateVersionName {
    doLast {
        if (project.hasProperty("vName")) {
            def manifestFile = file("src/main/AndroidManifest.xml")
            def patternVersionNumber = Pattern.compile("versionName=\"(\\d+)\\.(\\d+)\\.(\\d+)(?:\\S*)\"")
            def manifestText = manifestFile.getText()
            def matcherVersionNumber = patternVersionNumber.matcher(manifestText)
            matcherVersionNumber.find()

            def manifestContent = matcherVersionNumber.replaceAll("versionName=\"" + vName + "\"")
            manifestFile.write(manifestContent)

            println "Version name: " + vName
        } else {
            println "please run: updateVersionName -P vName="
        }
    }
}